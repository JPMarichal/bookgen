"""add_notification_model

Revision ID: a82fdd65dbec
Revises: 176a9cbacdac
Create Date: 2025-10-07 16:35:50.970782

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a82fdd65dbec'
down_revision: Union[str, Sequence[str], None] = '176a9cbacdac'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('delivery_method', sa.String(length=50), nullable=False),
    sa.Column('recipient', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('delivery_attempts', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('related_entity_type', sa.String(length=50), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.Column('notification_metadata', sa.JSON(), nullable=True),
    sa.Column('is_rate_limited', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notification_entity', 'notifications', ['related_entity_type', 'related_entity_id'], unique=False)
    op.create_index('idx_notification_recipient', 'notifications', ['recipient'], unique=False)
    op.create_index('idx_notification_status_created', 'notifications', ['status', 'created_at'], unique=False)
    op.create_index('idx_notification_type_created', 'notifications', ['notification_type', 'created_at'], unique=False)
    op.create_index(op.f('ix_notifications_delivery_method'), 'notifications', ['delivery_method'], unique=False)
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_notification_type'), 'notifications', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notifications_status'), 'notifications', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_delivery_method'), table_name='notifications')
    op.drop_index('idx_notification_type_created', table_name='notifications')
    op.drop_index('idx_notification_status_created', table_name='notifications')
    op.drop_index('idx_notification_recipient', table_name='notifications')
    op.drop_index('idx_notification_entity', table_name='notifications')
    op.drop_table('notifications')
    # ### end Alembic commands ###
