name: Test

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio pytest-xdist flake8 black

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check src || true

    - name: Run tests
      run: |
        # Create tests directory if it doesn't exist
        mkdir -p tests
        # Run pytest if tests exist, otherwise skip
        # Skip slow tests (performance/stress) and run tests in parallel with pytest-xdist
        # This significantly reduces test execution time from ~25min to ~5-10min
        if [ -d "tests" ] && [ "$(ls -A tests/*.py 2>/dev/null)" ]; then
          pytest tests/ -m "not slow" -n auto --cov=src --cov-report=xml --cov-report=term
        else
          echo "No tests found, skipping test execution"
          # Create a dummy coverage file for upload
          echo '<?xml version="1.0" ?><coverage version="1.0"><packages/></coverage>' > coverage.xml
        fi

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      continue-on-error: true
